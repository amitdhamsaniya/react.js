{"ast":null,"code":"var _jsxFileName = \"E:\\\\git hub\\\\react.js\\\\project\\\\src\\\\Component\\\\Pages\\\\SignnUpCompo.jsx\";\n// import React from 'react';\n// // import { Link } from 'react-router-dom';\n// import CustomHook from './../Hooks/CustomHook.jsx';\n\nconst SignnUPCompo = () => {\n  //     const { handleChange, inp, error } = CustomHook({ username: \"\", password: \"\" }, {})\n\n  //     const register = (event) => {\n  //         // console.log(inp);\n  //         fetch(\"http://localhost:5000/users\", {\n  //             method: \"POST\",\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\",\n  //             },\n  //             body: JSON.stringify({ inp }),\n  //         }).then((res) => res.json()).then((result) => {\n  //             console.log(result);\n  //         })\n};\n//     return (\n//         <>\n//             <div className=\"row mt-5 \">\n//                 <div className=\"col-4 shadow bg-body rounded offset-4 mt-5\">\n//                     <div className=\"card \">\n//                         <div className=\"card-header text-center\"> <h3>Registration</h3></div>\n//                         <div className=\"card-body\">\n//                             <div className=\"row\">\n//                                 <div className=\"col\">\n//                                     <input type=\"text\" onChange={handleChange} placeholder='Enter your name' className='form-control' />\n//                                 </div>\n//                             </div>\n//                             <div className=\"row mt-3\">\n//                                 <div className=\"col\">\n//                                     <input type=\"password \" onChange={handleChange} placeholder='Enter your password' className='form-control' />\n//                                 </div>\n//                             </div>\n//                             <div className=\"row mt-3 text-center\">\n//                                 <div className=\"col\">\n//                                     <input type=\"submit\" className='btn btn-primary mx-4' onClick={register} value=\"login\" />\n//                                     <input type=\"submit\" className='btn btn-danger ' value=\"cancel\" />\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     );\n// };\n_c = SignnUPCompo;\nexport default SignnUPCompo;\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction validateEmail(value) {\n  let error;\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n}\nfunction validateUsername(value) {\n  let error;\n  if (value === 'admin') {\n    error = 'Nice try!';\n  }\n  return error;\n}\nexport const FieldLevelValidationExample = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Signup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      email: ''\n    },\n    onSubmit: values => {\n      // same shape as initial values\n      console.log(values);\n    },\n    children: ({\n      errors,\n      touched,\n      isValidating\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        validate: validateEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"username\",\n        validate: validateUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 3\n}, this);\n_c2 = FieldLevelValidationExample;\nvar _c, _c2;\n$RefreshReg$(_c, \"SignnUPCompo\");\n$RefreshReg$(_c2, \"FieldLevelValidationExample\");","map":{"version":3,"names":["SignnUPCompo","_c","React","Formik","Form","Field","jsxDEV","_jsxDEV","validateEmail","value","error","test","validateUsername","FieldLevelValidationExample","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","username","email","onSubmit","values","console","log","errors","touched","isValidating","name","validate","type","_c2","$RefreshReg$"],"sources":["E:/git hub/react.js/project/src/Component/Pages/SignnUpCompo.jsx"],"sourcesContent":["// import React from 'react';\r\n// // import { Link } from 'react-router-dom';\r\n// import CustomHook from './../Hooks/CustomHook.jsx';\r\n\r\nconst SignnUPCompo = () => {\r\n//     const { handleChange, inp, error } = CustomHook({ username: \"\", password: \"\" }, {})\r\n\r\n//     const register = (event) => {\r\n//         // console.log(inp);\r\n//         fetch(\"http://localhost:5000/users\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify({ inp }),\r\n//         }).then((res) => res.json()).then((result) => {\r\n//             console.log(result);\r\n//         })\r\n    }\r\n//     return (\r\n//         <>\r\n//             <div className=\"row mt-5 \">\r\n//                 <div className=\"col-4 shadow bg-body rounded offset-4 mt-5\">\r\n//                     <div className=\"card \">\r\n//                         <div className=\"card-header text-center\"> <h3>Registration</h3></div>\r\n//                         <div className=\"card-body\">\r\n//                             <div className=\"row\">\r\n//                                 <div className=\"col\">\r\n//                                     <input type=\"text\" onChange={handleChange} placeholder='Enter your name' className='form-control' />\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"row mt-3\">\r\n//                                 <div className=\"col\">\r\n//                                     <input type=\"password \" onChange={handleChange} placeholder='Enter your password' className='form-control' />\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"row mt-3 text-center\">\r\n//                                 <div className=\"col\">\r\n//                                     <input type=\"submit\" className='btn btn-primary mx-4' onClick={register} value=\"login\" />\r\n//                                     <input type=\"submit\" className='btn btn-danger ' value=\"cancel\" />\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n\r\nexport default SignnUPCompo;\r\n\r\nimport React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nfunction validateEmail(value) {\r\n  let error;\r\n  if (!value) {\r\n    error = 'Required';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n    error = 'Invalid email address';\r\n  }\r\n  return error;\r\n}\r\n\r\nfunction validateUsername(value) {\r\n  let error;\r\n  if (value === 'admin') {\r\n    error = 'Nice try!';\r\n  }\r\n  return error;\r\n}\r\n\r\nexport const FieldLevelValidationExample = () => (\r\n  <div>\r\n    <h1>Signup</h1>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        email: '',\r\n      }}\r\n      onSubmit={values => {\r\n        // same shape as initial values\r\n        console.log(values);\r\n      }}\r\n    >\r\n      {({ errors, touched, isValidating }) => (\r\n        <Form>\r\n          <Field name=\"email\" validate={validateEmail} />\r\n          {errors.email && touched.email && <div>{errors.email}</div>}\r\n\r\n          <Field name=\"username\" validate={validateUsername} />\r\n          {errors.username && touched.username && <div>{errors.username}</div>}\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
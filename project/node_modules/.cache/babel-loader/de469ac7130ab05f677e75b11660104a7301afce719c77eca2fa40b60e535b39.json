{"ast":null,"code":"var _jsxFileName = \"E:\\\\git hub\\\\react.js\\\\project\\\\src\\\\Component\\\\Pages\\\\SignnUpCompo.jsx\";\n// import React from 'react';\n// // import { Link } from 'react-router-dom';\n// import CustomHook from './../Hooks/CustomHook.jsx';\n\n// const SignnUPCompo = () => {\n//     const { handleChange, inp, error } = CustomHook({ username: \"\", password: \"\" }, {})\n\n//     const register = (event) => {\n//         // console.log(inp);\n//         fetch(\"http://localhost:5000/users\", {\n//             method: \"POST\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({ inp }),\n//         }).then((res) => res.json()).then((result) => {\n//             console.log(result);\n//         })\n//     }\n//     return (\n//         <>\n//             <div className=\"row mt-5 \">\n//                 <div className=\"col-4 shadow bg-body rounded offset-4 mt-5\">\n//                     <div className=\"card \">\n//                         <div className=\"card-header text-center\"> <h3>Registration</h3></div>\n//                         <div className=\"card-body\">\n//                             <div className=\"row\">\n//                                 <div className=\"col\">\n//                                     <input type=\"text\" onChange={handleChange} placeholder='Enter your name' className='form-control' />\n//                                 </div>\n//                             </div>\n//                             <div className=\"row mt-3\">\n//                                 <div className=\"col\">\n//                                     <input type=\"password \" onChange={handleChange} placeholder='Enter your password' className='form-control' />\n//                                 </div>\n//                             </div>\n//                             <div className=\"row mt-3 text-center\">\n//                                 <div className=\"col\">\n//                                     <input type=\"submit\" className='btn btn-primary mx-4' onClick={register} value=\"login\" />\n//                                     <input type=\"submit\" className='btn btn-danger ' value=\"cancel\" />\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     );\n// };\n\n// export default SignnUPCompo;\n\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction validateEmail(value) {\n  let error;\n  if (!value) {\n    error = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n  }\n  return error;\n}\nfunction validateUsername(value) {\n  let error;\n  if (value === 'admin') {\n    error = 'Nice try!';\n  }\n  return error;\n}\nconst SignnUpCompo = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        email: ''\n      },\n      onSubmit: values => {\n        // same shape as initial values\n        console.log(values);\n      },\n      children: ({\n        errors,\n        touched,\n        isValidating\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          validate: validateEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"username\",\n          validate: validateUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = SignnUpCompo;\nexport default SignnUpCompo;\nvar _c;\n$RefreshReg$(_c, \"SignnUpCompo\");","map":{"version":3,"names":["React","Formik","Form","Field","jsxDEV","_jsxDEV","Fragment","_Fragment","validateEmail","value","error","test","validateUsername","SignnUpCompo","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","username","email","onSubmit","values","console","log","errors","touched","isValidating","name","validate","type","_c","$RefreshReg$"],"sources":["E:/git hub/react.js/project/src/Component/Pages/SignnUpCompo.jsx"],"sourcesContent":["// import React from 'react';\r\n// // import { Link } from 'react-router-dom';\r\n// import CustomHook from './../Hooks/CustomHook.jsx';\r\n\r\n// const SignnUPCompo = () => {\r\n//     const { handleChange, inp, error } = CustomHook({ username: \"\", password: \"\" }, {})\r\n\r\n//     const register = (event) => {\r\n//         // console.log(inp);\r\n//         fetch(\"http://localhost:5000/users\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify({ inp }),\r\n//         }).then((res) => res.json()).then((result) => {\r\n//             console.log(result);\r\n//         })\r\n//     }\r\n//     return (\r\n//         <>\r\n//             <div className=\"row mt-5 \">\r\n//                 <div className=\"col-4 shadow bg-body rounded offset-4 mt-5\">\r\n//                     <div className=\"card \">\r\n//                         <div className=\"card-header text-center\"> <h3>Registration</h3></div>\r\n//                         <div className=\"card-body\">\r\n//                             <div className=\"row\">\r\n//                                 <div className=\"col\">\r\n//                                     <input type=\"text\" onChange={handleChange} placeholder='Enter your name' className='form-control' />\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"row mt-3\">\r\n//                                 <div className=\"col\">\r\n//                                     <input type=\"password \" onChange={handleChange} placeholder='Enter your password' className='form-control' />\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"row mt-3 text-center\">\r\n//                                 <div className=\"col\">\r\n//                                     <input type=\"submit\" className='btn btn-primary mx-4' onClick={register} value=\"login\" />\r\n//                                     <input type=\"submit\" className='btn btn-danger ' value=\"cancel\" />\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default SignnUPCompo;\r\n\r\n\r\nimport React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nfunction validateEmail(value) {\r\n    let error;\r\n    if (!value) {\r\n      error = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n      error = 'Invalid email address';\r\n    }\r\n    return error;\r\n  }\r\n  \r\n  function validateUsername(value) {\r\n    let error;\r\n    if (value === 'admin') {\r\n      error = 'Nice try!';\r\n    }\r\n    return error;\r\n  }\r\n  \r\nconst SignnUpCompo = () => {\r\n    return (\r\n        <>\r\n    <h1>Signup</h1>\r\n    <Formik\r\n      initialValues={{\r\n        username: '',\r\n        email: '',\r\n      }}\r\n      onSubmit={values => {\r\n        // same shape as initial values\r\n        console.log(values);\r\n      }}\r\n    >\r\n      {({ errors, touched, isValidating }) => (\r\n        <Form>\r\n          <Field name=\"email\" validate={validateEmail} />\r\n          {errors.email && touched.email && <div>{errors.email}</div>}\r\n\r\n          <Field name=\"username\" validate={validateUsername} />\r\n          {errors.username && touched.username && <div>{errors.username}</div>}\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      )}\r\n    </Formik>        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignnUpCompo;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC1B,IAAIC,KAAK;EACT,IAAI,CAACD,KAAK,EAAE;IACVC,KAAK,GAAG,UAAU;EACpB,CAAC,MAAM,IAAI,CAAC,2CAA2C,CAACC,IAAI,CAACF,KAAK,CAAC,EAAE;IACnEC,KAAK,GAAG,uBAAuB;EACjC;EACA,OAAOA,KAAK;AACd;AAEA,SAASE,gBAAgBA,CAACH,KAAK,EAAE;EAC/B,IAAIC,KAAK;EACT,IAAID,KAAK,KAAK,OAAO,EAAE;IACrBC,KAAK,GAAG,WAAW;EACrB;EACA,OAAOA,KAAK;AACd;AAEF,MAAMG,YAAY,GAAGA,CAAA,KAAM;EACvB,oBACIR,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACJT,OAAA;MAAAS,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfb,OAAA,CAACJ,MAAM;MACLkB,aAAa,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAE;MACFC,QAAQ,EAAEC,MAAM,IAAI;QAClB;QACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACrB,CAAE;MAAAT,QAAA,EAEDA,CAAC;QAAEY,MAAM;QAAEC,OAAO;QAAEC;MAAa,CAAC,kBACjCvB,OAAA,CAACH,IAAI;QAAAY,QAAA,gBACHT,OAAA,CAACF,KAAK;UAAC0B,IAAI,EAAC,OAAO;UAACC,QAAQ,EAAEtB;QAAc;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC9CQ,MAAM,CAACL,KAAK,IAAIM,OAAO,CAACN,KAAK,iBAAIhB,OAAA;UAAAS,QAAA,EAAMY,MAAM,CAACL;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAE3Db,OAAA,CAACF,KAAK;UAAC0B,IAAI,EAAC,UAAU;UAACC,QAAQ,EAAElB;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACpDQ,MAAM,CAACN,QAAQ,IAAIO,OAAO,CAACP,QAAQ,iBAAIf,OAAA;UAAAS,QAAA,EAAMY,MAAM,CAACN;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEpEb,OAAA;UAAQ0B,IAAI,EAAC,QAAQ;UAAAjB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA,eACH,CAAC;AAEX,CAAC;AAACc,EAAA,GA5BInB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}